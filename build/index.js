module.exports=function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=3)}([function(n,e){n.exports=require("styled-components")},function(n,e){n.exports=require("prop-types")},function(n,e){n.exports=require("react")},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o,i=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},a=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),s=(r=["\n  position: relative;\n  overflow: hidden;\n  background: #221E22;\n\n  &, .img {\n    height: 500px;\n    width: 100%;\n  }\n\n  .img {\n    margin: 0;\n    padding: 0;\n    .content {\n      margin: 0;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: #221E22;\n      color: #FFF;\n      padding: 20px;\n      .title {\n        font-size: 25px;\n        font-weight: bold;\n      }\n\n      .description {\n\n      }\n    }\n  }\n\n  .previous {\n    left: 0;\n    top: 0;\n    background: linear-gradient(90deg, rgba(0,0,0,0.5), transparent);\n    text-align: left;\n  }\n\n  .next {\n    right: 0;\n    top: 0;\n    background: linear-gradient(90deg, transparent, rgba(0,0,0,0.5));\n    text-align: right ;\n  }\n  \n  .next, .previous {\n    position: absolute;\n    width: 30%;\n    height: 100%;\n    border: none;\n    transition: all 0.2s;\n    color: #FFF;\n    padding: 20px;\n    margin: 0;\n    opacity: 0.1;\n    \n    &:hover {\n      opacity: 0.9;\n      cursor: pointer;\n    }\n    \n    &:active, &:focus {\n      outline: none;\n    }\n\n    img {\n      width: 30%;\n      height: 30%;\n    }\n  }\n"],o=["\n  position: relative;\n  overflow: hidden;\n  background: #221E22;\n\n  &, .img {\n    height: 500px;\n    width: 100%;\n  }\n\n  .img {\n    margin: 0;\n    padding: 0;\n    .content {\n      margin: 0;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: #221E22;\n      color: #FFF;\n      padding: 20px;\n      .title {\n        font-size: 25px;\n        font-weight: bold;\n      }\n\n      .description {\n\n      }\n    }\n  }\n\n  .previous {\n    left: 0;\n    top: 0;\n    background: linear-gradient(90deg, rgba(0,0,0,0.5), transparent);\n    text-align: left;\n  }\n\n  .next {\n    right: 0;\n    top: 0;\n    background: linear-gradient(90deg, transparent, rgba(0,0,0,0.5));\n    text-align: right ;\n  }\n  \n  .next, .previous {\n    position: absolute;\n    width: 30%;\n    height: 100%;\n    border: none;\n    transition: all 0.2s;\n    color: #FFF;\n    padding: 20px;\n    margin: 0;\n    opacity: 0.1;\n    \n    &:hover {\n      opacity: 0.9;\n      cursor: pointer;\n    }\n    \n    &:active, &:focus {\n      outline: none;\n    }\n\n    img {\n      width: 30%;\n      height: 30%;\n    }\n  }\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),u=t(2),c=f(u),l=f(t(1)),p=f(t(0));function f(n){return n&&n.__esModule?n:{default:n}}var d=function(n){function e(n){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(n,e){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?n:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,n));return t.previous=function(){var n=i({},t.state),e=n.currentPosition,r=n.items;t.setState({currentPosition:e<=0?r.length-1:e-1})},t.current=function(){var n=i({},t.state),e=n.currentPosition;return n.items[e]},t.next=function(){var n=i({},t.state),e=n.currentPosition,r=n.items;t.setState({currentPosition:e<r.length-1?e+1:0})},t.state={items:[],currentPosition:0},t}return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}(e,u.Component),a(e,[{key:"render",value:function(){var n=this.props,e=n.className,t=n.leftArrow,r=n.rightArrow,o=this.current();return c.default.createElement("div",{className:e},c.default.createElement("div",{className:"img",style:{background:"url("+o.src+") no-repeat center / contain"}},c.default.createElement("div",{className:"content"},c.default.createElement("div",{className:"title"},o.title),c.default.createElement("div",{className:"description"},o.description))),c.default.createElement("button",{onClick:this.previous,className:"previous"},c.default.createElement("img",{src:t})),c.default.createElement("button",{onClick:this.next,className:"next"},c.default.createElement("img",{src:r})))}}]),e}();d.getDerivedStateFromProps=function(n){return{items:n.items,currentPosition:0}},d.propTypes={className:l.default.string,items:l.default.arrayOf(l.default.shape({title:l.default.string,description:l.default.string,src:l.default.string.isRequired})),leftArrow:l.default.string,rightArrow:l.default.string},e.default=(0,p.default)(d)(s)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,